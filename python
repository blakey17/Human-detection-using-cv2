import cv2
import numpy as np
import time

eyes = False
eye = 0
face = False
X = True


face_cascade = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")
eye_cascade = cv2.CascadeClassifier("haarcascade_eye.xml")

cap = cv2.VideoCapture(0)

while X == True:
    time.sleep(0.5)
    ret, frame = cap.read()
    img = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blur = cv2.GaussianBlur(img,(5, 5), 0)
    faces = face_cascade.detectMultiScale(blur, 1.3, 5)
    for (x,y,w,h) in faces:
        print("Face detected")
        face = True
        cv2.rectangle(blur, (x,y), (x+w, y+h), (250,250,520),4)
        roi_gray = frame[y:y+h, x:x+w]
        roi_color = blur[y:y+h, x:x+w]
        

        Eyes = eye_cascade.detectMultiScale(roi_gray)
        for (ex,ey,ew,eh) in Eyes:
            print("eyes detected")
            eye = eye + 1
            
            if eye == 2:
                eyes = True
            else:
                eyes = False
            cv2.rectangle(roi_color, (ex, ey), (ex+ew,ey+eh), (200,200,200), 2)



    cv2.imshow("img", blur)
    cv2.imshow("gray", frame)
    k = cv2.waitKey(30) & 0xff

    if eyes and face == True:
        print("human detected")
        X = False
    if k == 27:
        break


cap.release()
cv2.destroyAllWindows()
        
